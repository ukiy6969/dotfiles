# Rust
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = ['rust']
hook_source = '''
  let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = ['rust']

[[plugins]]
repo = 'timonv/vim-cargo'
on_ft = ['rust']
hook_source = '''
'''

# Web api
[[plugins]]
repo = 'mattn/webapi-vim'

# Javascript
[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']
hook_source = '''
  " javascript
  let g:javascript_enable_domhtmlcss = 1
  let g:syntastic_javascript_checkers=['eslint']
'''

[[plugins]]
repo = 'mtscout6/syntastic-local-eslint.vim'
on_ft = ['javascript']

[[plugins]]
repo = 'ternjs/tern_for_vim'
build = 'npm install'
on_ft = ['javascript']
hook_source = '''
  "let g:tern_show_argument_hints="on_move"
  let g:tern_map_keys = 1
'''

[[plugins]]
repo = 'heavenshell/vim-jsdoc'
on_ft = ['javascript']

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript']

# Markdown
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['Markdown', 'markdown']

# Stylus
[[plugins]]
repo = 'wavded/vim-stylus'
on_ft = ['stylus']

# Latex
[[plugins]]
repo = 'lervag/vimtex'
rev = 'master'
on_ft = ['tex', 'Tex', 'latex']
hook_source = '''
  " systastic
  let g:syntastic_auto_loc_list = 1

  let g:vimtex_latexmk_continuous = 1
  "let g:vimtex_latexmk_options = '-pdfdvi'
  let g:vimtex_view_general_viewer = 'okular'
  let g:vimtex_view_general_options = '--unique @pdf\#src:@line@tex'
'''

# Haskell
[[plugins]]
repo = 'neovimhaskell/haskell-vim'
on_ft = ['haskell']
hook_source = '''
" open the neomake error window automatically when an error is found
let g:neomake_open_list = 2
" Haskell Lint
nmap <silent> <leader>hl :Neomake hlint<CR>

" Options for Haskell Syntax Check
let g:neomake_haskell_ghc_mod_args = '-g-Wall'
'''

[[plugins]]
repo = 'itchyny/vim-haskell-indent'
on_ft = ['haskell']

[[plugins]]
repo = 'eagletmt/ghcmod-vim'
on_ft = ['haskell']

[[plugins]]
repo = 'Shougo/neocomplcache'
on_ft = ['haskell']

[[plugins]]
repo = 'ujihisa/neco-ghc'
on_ft = ['haskell']

[[plugins]]
repo = 'Twinside/vim-hoogle'
on_ft = ['haskell']

#[[plugins]]
#repo = 'osyo-manga/vim-watchdogs'
#on_ft = ['haskell']

[[plugins]]
repo = 'ujihisa/unite-haskellimport'
on_ft = ['haskell']

[[plugins]]
repo = 'majutsushi/tagbar'
on_ft = ['haskell']

[[plugins]]
repo = 'ujihisa/ref-hoogle'
on_ft = ['haskell']

[[plugins]]
repo = 'nbouscal/vim-stylish-haskell'
on_ft = ['haskell']

[[plugins]]
repo = 'enomsg/vim-haskellConcealPlus'
on_ft = ['haskell']
hook_source = '''
" Conceal {{{
" Use same color behind concealed unicode characters
hi clear Conceal

" Pretty unicode haskell symbols
let g:haskell_conceal_wide = 1
let g:haskell_conceal_enumerations = 1
let hscoptions="ùêíùêìùêÑùêåxRtBùîªw"

" }}}
'''

[[plugins]]
repo = 'mpickering/hlint-refactor-vim'
on_ft = ['haskell']
