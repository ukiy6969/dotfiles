# Rust
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = ['rust']
hook_source = '''
  let g:rustfmt_autosave = 0
'''

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = ['rust']
hook_source = '''
  nmap gd <Plug>(rust-def)
  nmap gs <Plug>(rust-def-split)
  nmap gx <Plug>(rust-def-vertical)
  nmap <leader>gd <Plug>(rust-doc)
'''

[[plugins]]
repo = 'timonv/vim-cargo'
on_ft = ['rust']
hook_source = '''
'''

# Web api
[[plugins]]
repo = 'mattn/webapi-vim'

# Javascript
[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']
hook_source = '''
  " javascript
  let g:javascript_enable_domhtmlcss = 1
  let g:syntastic_javascript_checkers=['eslint']
'''

[[plugins]]
repo = 'mtscout6/syntastic-local-eslint.vim'
on_ft = ['javascript']

[[plugins]]
repo = 'ternjs/tern_for_vim'
build = 'npm install'
on_ft = ['javascript']
hook_source = '''
  "let g:tern_show_argument_hints="on_move"
  let g:tern_map_keys = 1
'''

[[plugins]]
repo = 'heavenshell/vim-jsdoc'
on_ft = ['javascript']
hook_source = '''
  let g:jsdoc_allow_input_prompt = 1
  let g:jsdoc_param_description_separator = ' - '
  let g:jsdoc_enable_es6 = 1
'''


[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript']

# Markdown
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['Markdown', 'markdown']

[[plugins]]
repo = 'kannokanno/previm'
on_ft = ['Markdown', 'markdown']

[[plugins]]
repo = 'tyru/open-browser.vim'
on_ft = ['Markdown', 'markdown']

# Stylus
[[plugins]]
repo = 'wavded/vim-stylus'
on_ft = ['stylus']

# Latex
[[plugins]]
repo = 'lervag/vimtex'
rev = 'master'
on_ft = ['tex', 'Tex', 'latex']
hook_source = '''
  " systastic
  let g:syntastic_auto_loc_list = 1

  let g:vimtex_latexmk_continuous = 1
  "let g:vimtex_latexmk_options = '-pdfdvi'
  let g:vimtex_view_general_viewer = 'okular'
  let g:vimtex_view_general_options = '--unique @pdf\#src:@line@tex'
'''

# Haskell
[[plugins]]
repo = 'enomsg/vim-haskellConcealPlus'
on_ft = ['haskell']
hook_source = '''
  " Conceal {{{
  " Use same color behind concealed unicode characters
  hi clear Conceal

  " Pretty unicode haskell symbols
  let g:haskell_conceal_wide = 1
  let g:haskell_conceal_enumerations = 1
  let hscoptions="ùêíùêìùêÑùêåxRtBùîªw"
  " }}}
'''

[[plugins]]
repo = 'neovimhaskell/haskell-vim'
on_ft = ['haskell']

[[plugins]]
repo = 'eagletmt/ghcmod-vim'
on_ft = ['haskell']
hook_source = '''
  " Resolve ghcmod base directory
  let g:ghcmod_use_basedir = getcwd()
  " Type of expression under cursor
  nmap <silent> <leader>ht :GhcModType<CR>
  " Insert type of expression under cursor
  nmap <silent> <leader>hT :GhcModTypeInsert<CR>

  augroup haskell
    autocmd!
    autocmd FileType haskell map <silent> <leader><cr> :noh<cr>:GhcModTypeClear<cr>
  augroup END
'''

[[plugins]]
repo = 'mpickering/hlint-refactor-vim'
on_ft = ['haskell']
hook_source = '''
  " Disable hlint-refactor-vim's default keybindings
  let g:hlintRefactor#disableDefaultKeybindings = 1

  " hlint-refactor-vim keybindings
  map <silent> <leader>hr :call ApplyOneSuggestion()<CR>
  map <silent> <leader>hR :call ApplyAllSuggestions()<CR>
'''

[[plugins]]
repo = 'Twinside/vim-hoogle'
on_ft = ['haskell']
hook_source = '''
  " Hoogle the word under the cursor
  nnoremap <silent> <leader>hh :Hoogle<CR>
  " Hoogle and prompt for input
  nnoremap <leader>hH :Hoogle 
  " Hoogle for detailed documentation (e.g. "Functor")
  nnoremap <silent> <leader>hi :HoogleInfo<CR>
  " Hoogle for detailed documentation and prompt for input
  nnoremap <leader>hI :HoogleInfo 
  " Hoogle, close the Hoogle window
  nnoremap <silent> <leader>hz :HoogleClose<CR>
'''

[[plugins]]
repo = 'itchyny/vim-haskell-indent'
on_ft = ['haskell']

[[plugins]]
repo = 'Shougo/neocomplcache'
on_ft = ['haskell']

[[plugins]]
repo = 'ujihisa/neco-ghc'
on_ft = ['haskell']
hook_source = '''
  " Show types in completion suggestions
  let g:necoghc_enable_detailed_browse = 1

  augroup haskell
    autocmd!
    autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc
  augroup END
'''

#[[plugins]]
#repo = 'osyo-manga/vim-watchdogs'
#on_ft = ['haskell']

[[plugins]]
repo = 'ujihisa/unite-haskellimport'
on_ft = ['haskell']

[[plugins]]
repo = 'ujihisa/ref-hoogle'
on_ft = ['haskell']

[[plugins]]
repo = 'nbouscal/vim-stylish-haskell'
on_ft = ['haskell']


# Scala
[[plugins]]
repo = 'derekwyatt/vim-scala'
on_ft = ['scala']
hook_source = '''
let g:scala_scaladoc_indent = 1
'''

[[plugins]]
repo = 'ensime/ensime-vim'
on_ft = ['scala']
hook_source = '''
autocmd BufWritePost *.scala silent :EnTypeCheck
nnoremap <localleader>t :EnType<CR>
au FileType scala nnoremap <localleader>df :EnDeclaration<CR>
'''

[[plugins]]
repo = 'w0rp/ale'
on_ft = 'scala'
hook_source = '''
  let g:ale_completion_enabled = 1
'''
depends = [
  'ensime-vim'
]

[[plugins]]
repo = 'Chiel92/vim-autoformat'
on_ft = 'scala'
hook_source = '''
  let g:autoformat_autoindent = 0
  let g:formatdef_scalafmt = "'scalafmt --stdin'"
  let g:formatters_scala = ['scalafmt']
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
